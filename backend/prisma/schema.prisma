generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database/memory-dialogue.db"
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  passwordHash  String   @map("password_hash")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  memoryRecords     MemoryRecord[]
  conversations     Conversation[]
  thoughtAnalysis   ThoughtAnalysis[]
  timelineAnalysis  TimelineAnalysis[]
  
  @@map("users")
}

model MemoryRecord {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  title      String?
  content    String
  mood       Int?     // 1-5 心情评分
  tags       String?  // JSON格式存储标签
  aiAnalysis String?  @map("ai_analysis") // AI对当前记录的分析
  createdAt  DateTime @default(now()) @map("created_at")
  
  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversations    Conversation[]
  timelineAnalysis TimelineAnalysis[]
  
  @@map("memory_records")
}

model Conversation {
  id               Int      @id @default(autoincrement())
  userId           Int      @map("user_id")
  memoryRecordId   Int      @map("memory_record_id")
  conversationData String   @map("conversation_data") // JSON格式存储对话历史
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  
  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  memoryRecord     MemoryRecord       @relation(fields: [memoryRecordId], references: [id], onDelete: Cascade)
  timelineAnalysis TimelineAnalysis[]
  
  @@map("conversations")
}

model ThoughtAnalysis {
  id             Int      @id @default(autoincrement())
  userId         Int      @map("user_id")
  analysisType   String   @map("analysis_type") // 'growth', 'change', 'pattern'
  timeRange      String?  @map("time_range")    // '1year', '2years', 'all'
  analysisResult String   @map("analysis_result") // JSON格式存储分析结果
  createdAt      DateTime @default(now()) @map("created_at")
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("thought_analysis")
}

model TimelineAnalysis {
  id               Int      @id @default(autoincrement())
  userId           Int      @map("user_id")
  memoryRecordId   Int      @map("memory_record_id")
  conversationId   Int?     @map("conversation_id") // 可选，如果是基于特定对话的分析
  analysisStage    String   @map("analysis_stage") // 'initial', 'conversation_1', 'conversation_2', etc.
  psychologicalInsight String @map("psychological_insight") // AI心理分析结果
  emotionalState   String?  @map("emotional_state") // 情绪状态分析
  growthIndicators String?  @map("growth_indicators") // 成长指标
  createdAt        DateTime @default(now()) @map("created_at")
  
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  memoryRecord MemoryRecord @relation(fields: [memoryRecordId], references: [id], onDelete: Cascade)
  conversation Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@map("timeline_analysis")
}